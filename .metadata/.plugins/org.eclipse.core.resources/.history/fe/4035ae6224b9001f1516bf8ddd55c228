package com.healthinsurence.controller;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;

import javax.print.DocFlavor.URL;

import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.healthinsurence.dto.HealthInsurenceDto;
import com.healthinsurence.otp.OtpService;
import com.healthinsurence.service.HealthInsurenceService;

@RestController
@RequestMapping("/register")

public class HealthInsurenceController {


    @Autowired
    private HealthInsurenceService service;
    @Autowired
    private OtpService otpservice;

    @PostMapping("/data")
    public ResponseEntity<?>  post(@RequestBody HealthInsurenceDto health)
    {
    	return service.saveHealthInsurence(health);
    }
    
    @GetMapping("/get/{mobileNo}")
    public ResponseEntity<?> findByMobileNo(@PathVariable String mobileNo)
    {
    	return service.findByMobileNo(mobileNo);
    }
  
    @GetMapping("/fetch/{mobileNo}")
    public ResponseEntity<?> fetchByMobileNo(@PathVariable String mobileNo) {
        return service.fetchByMobileNo(mobileNo);
    }

    @GetMapping("/call/{email}")
    public ResponseEntity<?> findByEmail(@PathVariable String email)
    {
    	return service.findByEmail(email);
    }
    
    @GetMapping("/otp")
    public ResponseEntity<?> generateOtp() {
        return service.generateOtp();  
 }
    
    @PostMapping("/sendEmailOTPforSignup/{tomail}")
    public String sendEmail(@PathVariable String tomail) {
    String postUrl = "https://api.zeptomail.in/v1.1/email";
    StringBuffer sb = new StringBuffer();
    try {

    URL url = new URL(postUrl);
    HttpURLConnection conn = (HttpURLConnection) url.openConnection();
    conn.setDoOutput(true);
    conn.setRequestMethod("POST");
    conn.setRequestProperty("Content-Type", "application/json");
    conn.setRequestProperty("Accept", "application/json");
    conn.setRequestProperty("Authorization", "Zoho-enczapikey PHtE6r1eROHrjG968hhW7fbuF8LwZoMqru1nfgRG4YxKAqAFSU1QotAjxGfj/hl+VaQWE/aby91ouOmbu+PXJWq+MTlPCGqyqK3sx/VYSPOZsbq6x00cuFgZckHYUYbnc9Bq3CDVud3YNA==");

    JSONObject requestBody = new JSONObject();

    JSONObject from = new JSONObject();

    String email="noreply@ramanasoft.in";
    from.put("address", email);
    from.put("name","Ramanasoft" );

    requestBody.put("from", from);

    JSONObject to = new JSONObject();

    JSONObject emailAddress = new JSONObject();

    emailAddress.put("address", tomail);
    // emailAddress.put("name", emailRequest.getToName());
    to.put("email_address", emailAddress);

    requestBody.put("to", new JSONObject[]{to});

    requestBody.put("subject", "RS TEAM");

    StringBuilder emailContent=new StringBuilder();

    emailContent.append("hii good morning");


    String emailContentString = emailContent.toString();





    requestBody.put("htmlbody", emailContentString);

    OutputStream os = conn.getOutputStream();

    os.write(requestBody.toString().getBytes());
    os.flush();

    BufferedReader br;
    if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) {
    br = new BufferedReader(new InputStreamReader((conn.getInputStream())));
    System.out.println(conn.getResponseCode());
    } else {
    br = new BufferedReader(new InputStreamReader((conn.getErrorStream())));
    System.out.println(conn.getResponseCode());
    }

    String output;
    while ((output = br.readLine()) != null) {
    sb.append(output);
    }

    br.close();
    conn.disconnect();

    return "done";
    } catch (Exception e) {
    e.printStackTrace();
    return "failed";
    }
    }
}
