package com.healthinsurence.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import com.healthinsurence.dto.RelationDto;
import com.healthinsurence.service.RealationService;

@RestController
@RequestMapping("/relation")
@CrossOrigin(origins = "*")
public class RelationController {
    
    @Autowired
    private RealationService service;
    
    @PostMapping("/relation-details")
    public ResponseEntity<?> checkCustomerDetails(@RequestBody RelationDto relation) {
        return service.checkCustomerDetails(relation);
    }
    
    @GetMapping("/all")
    public ResponseEntity<?> getAllRelations() {
        return service.getAllRelations();
    }
    
    @GetMapping("/customer-details")
    public ResponseEntity<?> customerDetails(@RequestParam String customerId) {
        return service.customerDetails(customerId);
    }
    
    @GetMapping("/payment-details")
    public ResponseEntity<?> getPaymentById(@RequestParam String paymentId) {
        return service.getPaymentById(paymentId);
    }
    
    @PostMapping("/add-relation")
    public ResponseEntity<?> addRelation(@RequestBody RelationDto relation) {
        ResponseEntity<?> response = service.saveHealthInsurence(relation);
        
        if (response.getStatusCode() == HttpStatus.CREATED) {
            return ResponseEntity.status(HttpStatus.CREATED).body("201 - Data added successfully. Redirecting to payment page...");
        } else if (response.getStatusCode() == HttpStatus.CONFLICT) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body("409 - Duplicates not allowed");
        } else if (response.getStatusCode() == HttpStatus.BAD_REQUEST) {
            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("400 - Enter valid credentials");
        } else  if (response.getStatusCode() == HttpStatus.INTERNAL_SERVER_ERROR) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("500 - Server is down");
        }else {
            return ResponseEntity.status(HttpStatus.OK).body("200-Request successful. Proceeding...");
    }
  }
}


